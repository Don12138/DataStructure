# Graph
+ 如果从v到w和从w到v中都有路径，则称其强连通，一个顶点也是一个强连通分量
+ 对于非强连通图需要增加一个for循环来遍历其所有连通分量
+ 无向图G是树的条件是 G是无回路的连通图 或 有n-1条边
+ 1. Prim算法的时间复杂度为O(V^2)
  2. Kruskal算法每次取不同联通分量最小的权值边，合并连通分量，其时间复杂度为O(ElogE)
  3. Dijkstra算法的时间复杂度为O(V^2)
  4. Floyd算法对于每个顶点，以这个顶点为中转顶点，判断任意两个顶点经过中转顶点路径是否减小，时间复杂度为O(n^3)
* 有向无环图(DAG图)，用DAG图表示工程，则成此DAG图为AOV网,AOV网中若边的权值代表着完成活动所需时间 则称为AOE网
* **关键路径**
  1. 事件最早发生时间：从左往右
  2. 事件最迟发生时间：先求出最早发生时间，再从右往左 
  3. 活动最早开始事件： 上个事件最早发生时间
  4. 活动最迟开始时间：下一个事件最迟发生时间减去活动时间
  5. 活动最早开始时间和 最迟开始时间相等的点是关键活动，关键路径上的点都是关键活动,要缩短工程工期，必须加快的进度的活动必须在各所有关键路径中都出现过一次