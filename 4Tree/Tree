# Tree
* 节点等于分支+1
* 含有n个节点的二叉链表中含有n+1个空链域
* 如果一颗非空的二叉树先序遍历和后序遍历序列刚好相反，则该二叉树只有一个叶子节点(高度等于节点数)
* 二叉树前序序列和后序序列的关系相当于以前序序列为入栈顺序后序序列为出栈顺序
* 二叉树**后序遍历非递归形式**需要加一个辅助指针或者在二叉树节点里增加一个访问域，以便在右节点返回时不会再访问右节点，而是直接出栈。
* 一般的二叉树只找父节点用层次遍历，找祖先节点用非递归后序遍历，祖先节点的信息都保存在栈里,找深度可以用层次遍历和递归前序遍历
* 森林（树）中有n个非终端节点，其二叉树有n+1个右指针为空的结点。
* 树、森林、二叉树遍历的关系
  
           树   ｜   森林  ｜   二叉树     ｜
       先根遍历  |  先序遍历 ｜  先序遍历    ｜
       后根遍历  |  中序遍历 ｜  中序遍历    ｜
* 二叉排序的中序遍历是一个有序序列